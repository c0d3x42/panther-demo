import{K as w,L as f,M as p,N as G,P as S}from"./index-2d3e59d7.js";const A=s=>({uuid:f(),name:s}),_=w("group",()=>{const s=p(new Map),n=p([]);let l=G(s.get(n[0])),d=G();function g(e){const o=s.get(e);c(o)&&(l.value=o)}function v(e,o){if(d.value=void 0,l.value=void 0,o===void 0)console.log("find needle"),s.forEach(i=>{const u=i.rules.find(b=>b.uuid===e);r(u)&&(d.value=u)}),r(d.value)||(l.value=s.get(e));else{const i=s.get(o);c(i)&&(l.value=i,d.value=i.rules.find(u=>u.uuid===e))}}function R(e,o){const i=n.splice(e,1)[0];n.splice(o,0,i)}function m(e,o,i){const u=s.get(e);if(c(u)){const b=u.rules.splice(o,1)[0];u.rules.splice(i,0,b)}}function h(e="new"){const o={uuid:f(),name:e,rules:[]};s.set(o.uuid,o),n.push(o.uuid)}function y(e,o="new rule"){const i={uuid:f(),name:o},u=s.get(e);c(u)&&u.rules.push(i)}function a(e){s.clear(),n.splice(0);for(const o of e)s.set(o.uuid,o),n.push(o.uuid)}const c=e=>!!e,t=S(()=>n.map(e=>s.get(e)).filter(c).map(e=>({key:e.uuid,label:e.name,children:e.rules.map(o=>({key:o.uuid,label:o.name}))})));return{moveRule:R,moveRuleInGroup:m,addGroup:h,addRuleToGroup:y,load:a,rules:t,group_store:s,setGroupSelected:g,selectedGroupRule:l,setRuleSelected:v,selectedRule:d}}),q=w("rule",()=>{const s=p(new Map),n=p([]);let l=G(s.get(n[0]));function d(t="new"){const e={uuid:f(),name:t};s.set(e.uuid,e),n.push(e.uuid)}function g(t,e){const o=n.splice(t,1)[0];n.splice(e,0,o)}function v(t){s.delete(t)}function R(t){console.log("RRR1",t);let e=s.get(t.uuid);r(e)&&(t.discard===void 0&&delete t.discard,t.all===void 0&&delete t.all,t.equals===void 0&&delete t.equals,t.exists===void 0&&delete t.exists,(t.match===void 0||Object.length===0)&&delete t.match,t.missing===void 0&&delete t.missing,t.none===void 0&&delete t.none,(t.replace===void 0||t.replace.length===0)&&delete t.replace,t.set===void 0&&delete t.set,t.stop===void 0&&delete t.stop,t.stop_rule===void 0&&delete t.stop_rule,console.log("stashing ",t),s.delete(e.uuid),s.set(e.uuid,t))}const m=S(()=>n.flatMap((e,o)=>s.get(e)).filter(r).map(e=>({key:e.uuid,label:e.name}))),h=S(()=>n.flatMap(t=>s.get(t)).filter(r));function y(t){n.splice(0),s.clear(),t.forEach(e=>{s.set(e.uuid,e),n.push(e.uuid)})}const a=t=>s.get(t);return{rule_order:n,rule_store:s,addRule:d,moveRule:g,deleteRule:v,getUuid:a,globalRules:m,globalOrderedRules:h,loadGlobalRules:y,save:R,selectedRule:l,setSelected:t=>{let e=a(t);e!==void 0&&(l.value=e)},isArray:k,isString:M}}),M=s=>typeof s=="string",k=s=>Array.isArray(s),r=s=>!!s;export{k as a,_ as b,M as i,A as n,q as u};
